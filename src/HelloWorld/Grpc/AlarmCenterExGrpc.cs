// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/AlarmCenterEx.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace AlarmCenterGrpcServiceLibrary {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class AlarmCenterEx
  {
    static readonly string __ServiceName = "AlarmCenterGrpcServiceLibrary.AlarmCenterEx";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::AlarmCenterGrpcServiceLibrary.LoginModel> __Marshaller_AlarmCenterGrpcServiceLibrary_LoginModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlarmCenterGrpcServiceLibrary.LoginModel.Parser));
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnRequest> __Marshaller_AlarmCenterGrpcServiceLibrary_SetParmArrayWaitReturnRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnRequest.Parser));
    static readonly grpc::Marshaller<global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnReply> __Marshaller_AlarmCenterGrpcServiceLibrary_SetParmArrayWaitReturnReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnReply.Parser));

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.LoginModel, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Login = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.LoginModel, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Login",
        __Marshaller_AlarmCenterGrpcServiceLibrary_LoginModel,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnRequest, global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnReply> __Method_SetParmArrayWaitReturn = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnRequest, global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetParmArrayWaitReturn",
        __Marshaller_AlarmCenterGrpcServiceLibrary_SetParmArrayWaitReturnRequest,
        __Marshaller_AlarmCenterGrpcServiceLibrary_SetParmArrayWaitReturnReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AlarmCenterGrpcServiceLibrary.AlarmCenterExReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AlarmCenterEx</summary>
    [grpc::BindServiceMethod(typeof(AlarmCenterEx), "BindService")]
    public abstract partial class AlarmCenterExBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Login(global::AlarmCenterGrpcServiceLibrary.LoginModel request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnReply> SetParmArrayWaitReturn(global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AlarmCenterEx</summary>
    public partial class AlarmCenterExClient : grpc::ClientBase<AlarmCenterExClient>
    {
      /// <summary>Creates a new client for AlarmCenterEx</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public AlarmCenterExClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AlarmCenterEx that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public AlarmCenterExClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected AlarmCenterExClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected AlarmCenterExClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Login(global::AlarmCenterGrpcServiceLibrary.LoginModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Login(global::AlarmCenterGrpcServiceLibrary.LoginModel request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> LoginAsync(global::AlarmCenterGrpcServiceLibrary.LoginModel request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> LoginAsync(global::AlarmCenterGrpcServiceLibrary.LoginModel request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
      }
      public virtual global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnReply SetParmArrayWaitReturn(global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetParmArrayWaitReturn(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnReply SetParmArrayWaitReturn(global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetParmArrayWaitReturn, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnReply> SetParmArrayWaitReturnAsync(global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetParmArrayWaitReturnAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnReply> SetParmArrayWaitReturnAsync(global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetParmArrayWaitReturn, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override AlarmCenterExClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AlarmCenterExClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(AlarmCenterExBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Login, serviceImpl.Login)
          .AddMethod(__Method_SetParmArrayWaitReturn, serviceImpl.SetParmArrayWaitReturn).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AlarmCenterExBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.LoginModel, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.Login));
      serviceBinder.AddMethod(__Method_SetParmArrayWaitReturn, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnRequest, global::AlarmCenterGrpcServiceLibrary.SetParmArrayWaitReturnReply>(serviceImpl.SetParmArrayWaitReturn));
    }

  }
}
#endregion
