// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/SystemManage.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace AlarmCenterGrpcServiceLibrary {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class SystemManage
  {
    static readonly string __ServiceName = "AlarmCenterGrpcServiceLibrary.SystemManage";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::AlarmCenterGrpcServiceLibrary.StringResult> __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlarmCenterGrpcServiceLibrary.StringResult.Parser));
    static readonly grpc::Marshaller<global::AlarmCenterGrpcServiceLibrary.BoolDefine> __Marshaller_AlarmCenterGrpcServiceLibrary_BoolDefine = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlarmCenterGrpcServiceLibrary.BoolDefine.Parser));
    static readonly grpc::Marshaller<global::AlarmCenterGrpcServiceLibrary.BaseResult> __Marshaller_AlarmCenterGrpcServiceLibrary_BaseResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlarmCenterGrpcServiceLibrary.BaseResult.Parser));
    static readonly grpc::Marshaller<global::AlarmCenterGrpcServiceLibrary.IntegerDefine> __Marshaller_AlarmCenterGrpcServiceLibrary_IntegerDefine = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlarmCenterGrpcServiceLibrary.IntegerDefine.Parser));

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine> __Method_AddRole = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddRole",
        __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult,
        __Marshaller_AlarmCenterGrpcServiceLibrary_BoolDefine);

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine> __Method_DeleteRole = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRole",
        __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult,
        __Marshaller_AlarmCenterGrpcServiceLibrary_BoolDefine);

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BaseResult> __Method_GetRoleEntities = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BaseResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRoleEntities",
        __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult,
        __Marshaller_AlarmCenterGrpcServiceLibrary_BaseResult);

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine> __Method_ModifyRole = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModifyRole",
        __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult,
        __Marshaller_AlarmCenterGrpcServiceLibrary_BoolDefine);

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BaseResult> __Method_GetUserEntities = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BaseResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserEntities",
        __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult,
        __Marshaller_AlarmCenterGrpcServiceLibrary_BaseResult);

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.StringResult> __Method_GetWebUser = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.StringResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWebUser",
        __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult,
        __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult);

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine> __Method_AddUserEntity = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddUserEntity",
        __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult,
        __Marshaller_AlarmCenterGrpcServiceLibrary_BoolDefine);

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.IntegerDefine, global::AlarmCenterGrpcServiceLibrary.BoolDefine> __Method_DeleteUserEntity = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.IntegerDefine, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUserEntity",
        __Marshaller_AlarmCenterGrpcServiceLibrary_IntegerDefine,
        __Marshaller_AlarmCenterGrpcServiceLibrary_BoolDefine);

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine> __Method_ModifyUserEntity = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModifyUserEntity",
        __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult,
        __Marshaller_AlarmCenterGrpcServiceLibrary_BoolDefine);

    static readonly grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine> __Method_RevisePassword = new grpc::Method<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RevisePassword",
        __Marshaller_AlarmCenterGrpcServiceLibrary_StringResult,
        __Marshaller_AlarmCenterGrpcServiceLibrary_BoolDefine);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AlarmCenterGrpcServiceLibrary.SystemManageReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SystemManage</summary>
    [grpc::BindServiceMethod(typeof(SystemManage), "BindService")]
    public abstract partial class SystemManageBase
    {
      /// <summary>
      ///新增角色
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.BoolDefine> AddRole(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///删除角色
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.BoolDefine> DeleteRole(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///获取角色列表
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.BaseResult> GetRoleEntities(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ////修改角色
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.BoolDefine> ModifyRole(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///获取用户列表
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.BaseResult> GetUserEntities(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///获取用户
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.StringResult> GetWebUser(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///新增用户
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.BoolDefine> AddUserEntity(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///删除用户
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.BoolDefine> DeleteUserEntity(global::AlarmCenterGrpcServiceLibrary.IntegerDefine request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///修改用户
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.BoolDefine> ModifyUserEntity(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ////修改密码
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::AlarmCenterGrpcServiceLibrary.BoolDefine> RevisePassword(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SystemManage</summary>
    public partial class SystemManageClient : grpc::ClientBase<SystemManageClient>
    {
      /// <summary>Creates a new client for SystemManage</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SystemManageClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SystemManage that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SystemManageClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SystemManageClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SystemManageClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///新增角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine AddRole(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///新增角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine AddRole(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddRole, null, options, request);
      }
      /// <summary>
      ///新增角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> AddRoleAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///新增角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> AddRoleAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddRole, null, options, request);
      }
      /// <summary>
      ///删除角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine DeleteRole(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///删除角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine DeleteRole(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRole, null, options, request);
      }
      /// <summary>
      ///删除角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> DeleteRoleAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///删除角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> DeleteRoleAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRole, null, options, request);
      }
      /// <summary>
      ///获取角色列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BaseResult GetRoleEntities(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoleEntities(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获取角色列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BaseResult GetRoleEntities(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRoleEntities, null, options, request);
      }
      /// <summary>
      ///获取角色列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BaseResult> GetRoleEntitiesAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoleEntitiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获取角色列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BaseResult> GetRoleEntitiesAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRoleEntities, null, options, request);
      }
      /// <summary>
      ////修改角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine ModifyRole(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ////修改角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine ModifyRole(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ModifyRole, null, options, request);
      }
      /// <summary>
      ////修改角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> ModifyRoleAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ////修改角色
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> ModifyRoleAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ModifyRole, null, options, request);
      }
      /// <summary>
      ///获取用户列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BaseResult GetUserEntities(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserEntities(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获取用户列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BaseResult GetUserEntities(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserEntities, null, options, request);
      }
      /// <summary>
      ///获取用户列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BaseResult> GetUserEntitiesAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserEntitiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获取用户列表
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BaseResult> GetUserEntitiesAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserEntities, null, options, request);
      }
      /// <summary>
      ///获取用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.StringResult GetWebUser(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWebUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获取用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.StringResult GetWebUser(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWebUser, null, options, request);
      }
      /// <summary>
      ///获取用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.StringResult> GetWebUserAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWebUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获取用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.StringResult> GetWebUserAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWebUser, null, options, request);
      }
      /// <summary>
      ///新增用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine AddUserEntity(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddUserEntity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///新增用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine AddUserEntity(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddUserEntity, null, options, request);
      }
      /// <summary>
      ///新增用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> AddUserEntityAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddUserEntityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///新增用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> AddUserEntityAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddUserEntity, null, options, request);
      }
      /// <summary>
      ///删除用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine DeleteUserEntity(global::AlarmCenterGrpcServiceLibrary.IntegerDefine request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUserEntity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///删除用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine DeleteUserEntity(global::AlarmCenterGrpcServiceLibrary.IntegerDefine request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUserEntity, null, options, request);
      }
      /// <summary>
      ///删除用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> DeleteUserEntityAsync(global::AlarmCenterGrpcServiceLibrary.IntegerDefine request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUserEntityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///删除用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> DeleteUserEntityAsync(global::AlarmCenterGrpcServiceLibrary.IntegerDefine request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUserEntity, null, options, request);
      }
      /// <summary>
      ///修改用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine ModifyUserEntity(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyUserEntity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine ModifyUserEntity(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ModifyUserEntity, null, options, request);
      }
      /// <summary>
      ///修改用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> ModifyUserEntityAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyUserEntityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///修改用户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> ModifyUserEntityAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ModifyUserEntity, null, options, request);
      }
      /// <summary>
      ////修改密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine RevisePassword(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RevisePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ////修改密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::AlarmCenterGrpcServiceLibrary.BoolDefine RevisePassword(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RevisePassword, null, options, request);
      }
      /// <summary>
      ////修改密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> RevisePasswordAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RevisePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ////修改密码
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::AlarmCenterGrpcServiceLibrary.BoolDefine> RevisePasswordAsync(global::AlarmCenterGrpcServiceLibrary.StringResult request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RevisePassword, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override SystemManageClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SystemManageClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SystemManageBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddRole, serviceImpl.AddRole)
          .AddMethod(__Method_DeleteRole, serviceImpl.DeleteRole)
          .AddMethod(__Method_GetRoleEntities, serviceImpl.GetRoleEntities)
          .AddMethod(__Method_ModifyRole, serviceImpl.ModifyRole)
          .AddMethod(__Method_GetUserEntities, serviceImpl.GetUserEntities)
          .AddMethod(__Method_GetWebUser, serviceImpl.GetWebUser)
          .AddMethod(__Method_AddUserEntity, serviceImpl.AddUserEntity)
          .AddMethod(__Method_DeleteUserEntity, serviceImpl.DeleteUserEntity)
          .AddMethod(__Method_ModifyUserEntity, serviceImpl.ModifyUserEntity)
          .AddMethod(__Method_RevisePassword, serviceImpl.RevisePassword).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SystemManageBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(serviceImpl.AddRole));
      serviceBinder.AddMethod(__Method_DeleteRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(serviceImpl.DeleteRole));
      serviceBinder.AddMethod(__Method_GetRoleEntities, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BaseResult>(serviceImpl.GetRoleEntities));
      serviceBinder.AddMethod(__Method_ModifyRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(serviceImpl.ModifyRole));
      serviceBinder.AddMethod(__Method_GetUserEntities, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BaseResult>(serviceImpl.GetUserEntities));
      serviceBinder.AddMethod(__Method_GetWebUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.StringResult>(serviceImpl.GetWebUser));
      serviceBinder.AddMethod(__Method_AddUserEntity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(serviceImpl.AddUserEntity));
      serviceBinder.AddMethod(__Method_DeleteUserEntity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.IntegerDefine, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(serviceImpl.DeleteUserEntity));
      serviceBinder.AddMethod(__Method_ModifyUserEntity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(serviceImpl.ModifyUserEntity));
      serviceBinder.AddMethod(__Method_RevisePassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlarmCenterGrpcServiceLibrary.StringResult, global::AlarmCenterGrpcServiceLibrary.BoolDefine>(serviceImpl.RevisePassword));
    }

  }
}
#endregion
